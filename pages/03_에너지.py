# -----------------------------
# 📊 [1] 필요한 라이브러리 불러오기
# -----------------------------
import streamlit as st      # 웹 인터페이스용
import pandas as pd         # 데이터 처리용
import plotly.express as px # 시각화용

# -----------------------------
# 🛠️ [2] 페이지 설정
# -----------------------------
st.set_page_config(
    page_title="국가별 재생에너지 분석",
    layout="wide"
)

# -----------------------------
# 🗂️ [3] 데이터 입력
# -----------------------------
# 국가별 재생에너지 발전 비율, 특징, 그리고 미래 발전 가능성
data = {
    "국가": ["대한민국", "독일", "미국", "중국", "노르웨이", "인도", "브라질", "일본"],
    "비율(%)": [7.5, 46.2, 20.1, 29.0, 98.0, 22.3, 83.5, 19.8],
    "특징": [
        "태양광 위주의 재생에너지 정책을 추진 중이나 여전히 석탄 발전 비중이 높아 전환 속도는 느린 편이다.",
        "풍력과 태양광 중심의 에너지 전환 선도국으로, 원자력 발전 축소와 재생에너지 확대를 병행하고 있다.",
        "주 정부별 정책 차이가 크며, 풍력과 수력을 중심으로 재생에너지 생산을 꾸준히 늘려가고 있다.",
        "풍력과 태양광 설치 규모가 세계 최대지만, 석탄 의존도도 여전히 높아 이중 구조를 띤다.",
        "전력의 90% 이상을 수력 발전으로 충당하며, 세계에서 가장 높은 재생에너지 비율을 기록 중이다.",
        "농촌 지역을 중심으로 태양광 확산이 진행 중이며, 에너지 접근성 향상에 중점을 두고 있다.",
        "풍부한 수자원을 활용한 수력 발전이 주를 이루며, 전체 전력의 80% 이상을 재생에너지로 공급한다.",
        "지열·태양광 기술 개발에 집중하고 있으나, 아직까지는 화석연료 의존도가 높은 편이다."
    ],
    "발전 가능성": [
        "중간 - 기술력은 높지만 정치·경제적 장벽 존재",
        "높음 - 정책 지속성과 시민 인식이 긍정적",
        "높음 - 자원·기술·투자 모두 갖춤",
        "중간 - 대규모 확장 여지는 있으나 석탄 저항",
        "낮음 - 이미 포화 상태, 추가 성장 여지 적음",
        "높음 - 태양광·풍력 확장 잠재력 큼",
        "중간 - 수력 외 대체원 확장은 다소 제한적",
        "중간 - 기술은 있으나 정책 추진력 부족"
    ]
}

# DataFrame으로 변환
df = pd.DataFrame(data)

# -----------------------------
# 📊 [4] 시각화: 막대그래프
# -----------------------------
st.title("🌍 국가별 재생에너지 발전 비율")

# plotly 그래프 생성
fig = px.bar(
    df,
    x="국가",
    y="비율(%)",
    text="비율(%)",
    color="비율(%)",
    color_continuous_scale="Viridis",
    title="국가별 재생에너지 비율 (%)",
    labels={"비율(%)": "재생에너지 비율 (%)"},
)

# 그래프 디자인 조정
fig.update_traces(texttemplate="%{text}%", textposition="outside")
fig.update_layout(
    yaxis_range=[0, 100],
    coloraxis_showscale=False,
    title_font_size=24
)

# Streamlit에 그래프 출력
st.plotly_chart(fig, use_container_width=True)

# -----------------------------
# 🔍 [5] 국가별 특징 및 발전 가능성 출력
# -----------------------------
st.subheader("🔎 국가별 특징 및 발전 가능성")

# 반복문으로 국가별 설명 출력
for i, row in df.iterrows():
    st.markdown(f"### {row['국가']}")
    st.markdown(f"📌 **특징**: {row['특징']}")
    st.markdown(f"🌱 **발전 가능성**: {row['발전 가능성']}")
    st.markdown("---")  # 구분선
